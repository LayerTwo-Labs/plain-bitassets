on: [push]

name: Check, Lint, Build

env:
  CARGO_TERM_COLOR: always

jobs:
  check-lint-build-stable:
    name: Check, Lint, Build (ubuntu stable)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 20
    # env:
    #  RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install latest nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt, clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1
        with:
          shared-key: x86_64-unknown-linux-gnu

      - name: Rustfmt
        run: cargo fmt --all -- --check
      
      - name: Cargo check
        run: cargo check --all-targets --all-features
      
      - name: Clippy
        run: cargo clippy --all-targets --all-features
      
      - name: Deny
        uses: EmbarkStudios/cargo-deny-action@v2

      - name: Build
        run: cargo build --release

      - name: 'Set environment variables: version number and output filenames'
        run: |
          BITASSETS_APP_VERSION=$(cargo metadata --format-version 1 | \
            jq -er '.packages | map(select(.name == "plain_bitassets_app") | .version) | .[0]')
          BITASSETS_APP_FILENAME="bitassets-${BITASSETS_APP_VERSION}-x86_64-unknown-linux-gnu"
          BITASSETS_CLI_FILENAME="bitassets-cli-${BITASSETS_APP_VERSION}-x86_64-unknown-linux-gnu"
          echo "BITASSETS_APP_VERSION=$BITASSETS_APP_VERSION" >> "$GITHUB_ENV"
          echo "BITASSETS_APP_FILENAME=$BITASSETS_APP_FILENAME" >> "$GITHUB_ENV"
          echo "BITASSETS_CLI_FILENAME=$BITASSETS_CLI_FILENAME" >> "$GITHUB_ENV"

      - name: 'Set filenames for release binaries'
        run: |
          pushd "target/release"
          ln -fs "plain_bitassets_app" "${BITASSETS_APP_FILENAME}"
          ln -fs "plain_bitassets_app_cli" "${BITASSETS_CLI_FILENAME}"
          popd

      - name: 'Upload Artifacts (bitassets)'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BITASSETS_APP_FILENAME }}
          if-no-files-found: error
          path: |
            target/release/${{ env.BITASSETS_APP_FILENAME }}
            target/release/${{ env.BITASSETS_CLI_FILENAME }}

      - name: Release
        uses: softprops/action-gh-release@v2.0.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            target/release/${{ env.BITASSETS_APP_FILENAME }}
            target/release/${{ env.BITASSETS_CLI_FILENAME }}
  
  build-macos:
    name: Build (macos-x86_64)
    runs-on: macos-latest
    permissions:
      contents: write
    timeout-minutes: 20
    # env:
    #  RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install latest nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1
        with:
          shared-key: x86_64-apple-darwin

      - name: Build
        run: cargo build --release

      - name: 'Set environment variables: version number and output filenames'
        run: |
          BITASSETS_APP_VERSION=$(cargo metadata --format-version 1 | \
            jq -er '.packages | map(select(.name == "plain_bitassets_app") | .version) | .[0]')
          BITASSETS_APP_FILENAME="bitassets-${BITASSETS_APP_VERSION}-x86_64-apple-darwin"
          BITASSETS_CLI_FILENAME="bitassets-cli-${BITASSETS_APP_VERSION}-x86_64-apple-darwin"
          echo "BITASSETS_APP_VERSION=$BITASSETS_APP_VERSION" >> "$GITHUB_ENV"
          echo "BITASSETS_APP_FILENAME=$BITASSETS_APP_FILENAME" >> "$GITHUB_ENV"
          echo "BITASSETS_CLI_FILENAME=$BITASSETS_CLI_FILENAME" >> "$GITHUB_ENV"

      - name: 'set filenames for release binaries'
        run: |
          pushd "target/release"
          ln -fs "plain_bitassets_app" "${BITASSETS_APP_FILENAME}"
          ln -fs "plain_bitassets_app_cli" "${BITASSETS_CLI_FILENAME}"
          popd

      - name: 'Upload Artifacts (bitassets)'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BITASSETS_APP_FILENAME }}
          if-no-files-found: error
          path: |
            target/release/${{ env.BITASSETS_APP_FILENAME }}
            target/release/${{ env.BITASSETS_CLI_FILENAME }}

      - name: Release
        uses: softprops/action-gh-release@v2.0.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            target/release/${{ env.BITASSETS_APP_FILENAME }}
            target/release/${{ env.BITASSETS_CLI_FILENAME }}

  build-windows:
    name: Build (x86_64-pc-windows-gnu)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 20
    # env:
    #  RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install latest nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: x86_64-pc-windows-gnu
        
      - name: Install mingw-w64
        run: sudo apt install mingw-w64

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.5.1
        with:
          shared-key: x86_64-pc-windows-gnu

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-gnu
        env:
          RUSTFLAGS: "-C linker=/usr/bin/x86_64-w64-mingw32-gcc"

      - name: 'Set environment variables: version number and output filenames'
        run: |
          BITASSETS_APP_VERSION=$(cargo metadata --format-version 1 | \
            jq -er '.packages | map(select(.name == "plain_bitassets_app") | .version) | .[0]')
          BITASSETS_APP_FILENAME="bitassets-${BITASSETS_APP_VERSION}-x86_64-pc-windows-gnu.exe"
          BITASSETS_CLI_FILENAME="bitassets-cli-${BITASSETS_APP_VERSION}-x86_64-pc-windows-gnu.exe"
          echo "BITASSETS_APP_VERSION=$BITASSETS_APP_VERSION" >> "$GITHUB_ENV"
          echo "BITASSETS_APP_FILENAME=$BITASSETS_APP_FILENAME" >> "$GITHUB_ENV"
          echo "BITASSETS_CLI_FILENAME=$BITASSETS_CLI_FILENAME" >> "$GITHUB_ENV"

      - name: 'set filenames for release binaries'
        run: |
          pushd "target/x86_64-pc-windows-gnu/release"
          ln -fs "plain_bitassets_app.exe" "${BITASSETS_APP_FILENAME}"
          ln -fs "plain_bitassets_app_cli.exe" "${BITASSETS_CLI_FILENAME}"
          popd

      - name: 'Upload Artifacts (bitassets)'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BITASSETS_APP_FILENAME }}
          if-no-files-found: error
          path: |
            target/x86_64-pc-windows-gnu/release/${{ env.BITASSETS_APP_FILENAME }}
            target/x86_64-pc-windows-gnu/release/${{ env.BITASSETS_CLI_FILENAME }}

      - name: Release
        uses: softprops/action-gh-release@v2.0.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            target/x86_64-pc-windows-gnu/release/${{ env.BITASSETS_APP_FILENAME }}
            target/x86_64-pc-windows-gnu/release/${{ env.BITASSETS_CLI_FILENAME }}
  
  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    needs: [check-lint-build-stable]
    steps:
      - name: Download latest bitcoin-patched
        run: |
          pushd ..
          wget https://releases.drivechain.info/L1-bitcoin-patched-latest-x86_64-unknown-linux-gnu.zip
          unzip L1-bitcoin-patched-latest-x86_64-unknown-linux-gnu.zip
          rm L1-bitcoin-patched-latest-x86_64-unknown-linux-gnu.zip
          mv L1-bitcoin-patched-latest-x86_64-unknown-linux-gnu bitcoin-patched-bins
          chmod +x bitcoin-patched-bins/bitcoind
          chmod +x bitcoin-patched-bins/bitcoin-cli
          popd
      - name: Download latest bip300301_enforcer
        run: |
          pushd ..
          wget https://releases.drivechain.info/bip300301-enforcer-latest-x86_64-unknown-linux-gnu.zip
          unzip bip300301-enforcer-latest-x86_64-unknown-linux-gnu.zip
          rm bip300301-enforcer-latest-x86_64-unknown-linux-gnu.zip
          mv bip300301-enforcer-latest-x86_64-unknown-linux-gnu/bip300301_enforcer-*-x86_64-unknown-linux-gnu bip300301-enforcer
          rm -r bip300301-enforcer-latest-x86_64-unknown-linux-gnu
          chmod +x bip300301-enforcer
          popd
      - name: Checkout electrs
        run: |
          pushd ..
          git clone https://github.com/romanz/electrs.git
          popd
      - name: Install latest nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          target: x86_64-pc-windows-gnu
      - name: Rust Cache (electrs)
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-electrs"
          workspaces: ../electrs -> target
      - name: Install electrs
        run: |
          pushd ../electrs
          cargo build --locked --release
          popd
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: x86_64-unknown-linux-gnu
      - name: Build (debug)
        run: cargo build
      - name: Run integration tests
        id: runIntegrationTests
        run: |
          export BIP300301_ENFORCER='../bip300301-enforcer'
          export BITCOIND='../bitcoin-patched-bins/bitcoind'
          export BITCOIN_CLI='../bitcoin-patched-bins/bitcoin-cli'
          export ELECTRS='../electrs/target/release/electrs'
          export BITASSETS_APP='target/debug/plain_bitassets_app'
          cargo run --example integration_tests


  upload-releases-to-releases-drivechain-info:
    name: Upload releases to releases.drivechain.info
    runs-on: ubuntu-latest
    needs: [check-lint-build-stable, build-macos, build-windows, integration-test]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download release assets
        uses: robinraju/release-downloader@v1.9
        with:
          tag: ${{ github.ref_name }}

      - name: Create zip files for releases.drivechain.info
        run: |
          shopt -s extglob
          mv bitassets-+([0-9]).+([0-9]).+([0-9])-x86_64-apple-darwin bitassets-latest-x86_64-apple-darwin
          mv bitassets-cli-+([0-9]).+([0-9]).+([0-9])-x86_64-apple-darwin bitassets-cli-latest-x86_64-apple-darwin
          zip L2-S4-BitAssets-latest-x86_64-apple-darwin.zip \
            bitassets-latest-x86_64-apple-darwin \
            bitassets-cli-latest-x86_64-apple-darwin
          mv bitassets-+([0-9]).+([0-9]).+([0-9])-x86_64-pc-windows-gnu.exe bitassets-latest-x86_64-pc-windows-gnu.exe
          mv bitassets-cli-+([0-9]).+([0-9]).+([0-9])-x86_64-pc-windows-gnu.exe bitassets-cli-latest-x86_64-pc-windows-gnu.exe
          zip L2-S4-BitAssets-latest-x86_64-pc-windows-gnu.zip \
            bitassets-latest-x86_64-pc-windows-gnu.exe \
            bitassets-cli-latest-x86_64-pc-windows-gnu.exe
          mv bitassets-+([0-9]).+([0-9]).+([0-9])-x86_64-unknown-linux-gnu bitassets-latest-x86_64-unknown-linux-gnu
          mv bitassets-cli-+([0-9]).+([0-9]).+([0-9])-x86_64-unknown-linux-gnu bitassets-cli-latest-x86_64-unknown-linux-gnu
          zip L2-S4-BitAssets-latest-x86_64-unknown-linux-gnu.zip \
            bitassets-latest-x86_64-unknown-linux-gnu \
            bitassets-cli-latest-x86_64-unknown-linux-gnu

      - name: Upload release assets to releases.drivechain.info
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: 45.33.96.47
          user: root
          pass: ${{ secrets.RELEASES_SERVER_PW }}
          port: 22
          scp: |
            'L2-S4-BitAssets-latest-*.zip' => '/var/www/html/'
